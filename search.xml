<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[淘宝自动发货平台(附源码)]]></title>
    <url>%2F2018%2F09%2F02%2F%E6%B7%98%E5%AE%9D%E8%87%AA%E5%8A%A8%E5%8F%91%E8%B4%A7%E5%B9%B3%E5%8F%B0-%E9%99%84%E6%BA%90%E7%A0%81%2F</url>
    <content type="text"><![CDATA[1,检查php版本，php -v 2,开启php服务，sudo apachectl start，启动Apache。 3, 在地址栏中输入localhost，出现It Works字符串，就说明Apache已经成功启动。 Apache的网站服务器根目录在/Library/WebServer/Documents路径下 4, 放开php配置文件: sudo vim /etc/apache2/httpd.conf 去掉注释符号：LoadModule php5_module libexec/apache2/libphp5.so 5, 重启Apache服务 sudo apachectl restart 6, clone php代码 拷贝到 /Library/WebServer/Documents目录下 https://github.com/dodan200/taobaoauto.git 7, mysql创建数据库 8, 建表操作。浏览器打开：http://localhost/taobao/install/sql.php 9, 按流程安装。 http://localhost/taobao/install/index.php 10， 淘宝开放平台申请api权限，配置到代码中，重启服务。…完成。]]></content>
  </entry>
  <entry>
    <title><![CDATA[python爬取淘宝美食数据]]></title>
    <url>%2F2018%2F08%2F13%2Fpython%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E7%BE%8E%E9%A3%9F%E6%95%B0%E6%8D%AE%2F</url>
    <content type="text"><![CDATA[1，安装selenium依赖： pip install selenium 2，chromedriver安装： 下载驱动:http://chromedriver.chromium.org/downloads mac 配置环境变量： https://www.jianshu.com/p/e137031bc7db 3，了解python selenium 的api http://selenium-python.readthedocs.io/waits.html 4，pip install pyquery 5，安装mongoDB https://www.cnblogs.com/quickcodes/p/5390482.html 6，安装pymongo https://www.jb51.net/article/64996.htm 下载可视化工具观察数据库 7，安装phantomJS https://blog.csdn.net/XiufengWu/article/details/78534091 phantomJS api: http://phantomjs.org/api/command-line.html phantomJS使用是的版本冲突：UserWarning: Selenium support for PhantomJS has been deprecated 解决方案：https://blog.csdn.net/u010358168/article/details/79749149 8， 编码 taobao.py 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980import refrom selenium import webdriverfrom selenium.common.exceptions import TimeoutExceptionfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECfrom pyquery import PyQuery as pqfrom config import *import pymongoclient = pymongo.MongoClient(MONGO_URL)db = client[MONGO_DB]# browse = webdriver.Chrome()# 用phantomJS做浏览器browse = webdriver.PhantomJS(service_args= SERVICE_ARGS)browse.set_window_size(1400,900)wait = WebDriverWait(browse,10)def search(): print(&apos;正在搜索&apos;) try: browse.get(&apos;https://www.taobao.com&apos;) input = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, &quot;#q&quot;))) submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,&apos;#J_TSearchForm &gt; div.search-button &gt; button&apos;))) input.send_keys(KEY_WORD) submit.click() total = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,&apos;#mainsrp-pager &gt; div &gt; div &gt; div &gt; div.total&apos;))) get_prodrous() return total.text except TimeoutException: return search()# 翻页def next_page(page_number): print(&apos;正在翻页&apos;) try: input = wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, &quot;#mainsrp-pager &gt; div &gt; div &gt; div &gt; div.form &gt; input&quot;))) submit = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, &apos;#mainsrp-pager &gt; div &gt; div &gt; div &gt; div.form &gt; span.btn.J_Submit&apos;))) input.clear() input.send_keys(page_number) submit.click() wait.until(EC.text_to_be_present_in_element((By.CSS_SELECTOR,&apos;#mainsrp-pager &gt; div &gt; div &gt; div &gt; ul &gt; li.item.active &gt; span&apos;),str(page_number))) get_prodrous() except TimeoutException: next_page(page_number)def get_prodrous(): wait.until(EC.presence_of_element_located((By.CSS_SELECTOR,&apos;#mainsrp-itemlist .items .item&apos;))) html = browse.page_source doc = pq(html) items = doc(&apos;#mainsrp-itemlist .items .item&apos;).items() for item in items: product = &#123; &apos;image&apos;: item.find(&apos;.pic .img&apos;).attr(&apos;src&apos;), &apos;price&apos;: item.find(&apos;.price&apos;).attr(&apos;src&apos;), &apos;deal&apos;: item.find(&apos;.deal-cnt&apos;).text()[:-3], &apos;title&apos;:item.find(&apos;.title&apos;).text(), &apos;shop&apos;:item.find(&apos;.shop&apos;).text(), &apos;location&apos;: item.find(&apos;.location&apos;).text() &#125; print(product) save_to_mongo(product)def save_to_mongo(result): try: if db[MONGO_TABLE].insert(result): print(&apos;存储到mongoDb成功&apos;,result) except Exception: print(&apos;存储到mongoDb失败&apos;)def main(): total = search() total = int(re.compile(&apos;(\d+)&apos;).search(total).group(1)) for i in range(2, total + 1): next_page(i) browse.close()if __name__ == &apos;__main__&apos;: main() config.py 12345678910MONGO_URL = &apos;localhost&apos;MONGO_DB = &apos;taobao&apos;MONGO_TABLE = &apos;product&apos;SERVICE_ARGS = [ &apos;--load-images=false&apos;, &apos;--disk-cache=true&apos;]KEY_WORD = &apos;美食&apos;]]></content>
  </entry>
  <entry>
    <title><![CDATA[python爬取猫眼电影榜单top100数据]]></title>
    <url>%2F2018%2F08%2F09%2Fpython%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657import datetimeimport reimport requestsfrom requests.exceptions import RequestExceptiondef get_one_page(url): try: response = requests.get(url) if response.status_code == 200: return response.text return None except RequestException: return Nonedef parse_one_page(html): # &lt;dd&gt;.*?board-index.*?&gt;(\ d+)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name&quot;&gt;&lt;a.*?&gt;(.*?)&lt;/a&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?integer&quot;&gt;(.*?)&lt;/i&gt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt; pattern= re.compile(&apos;&lt;dd&gt;.*?board-index.*?&gt;(\d+)&lt;/i&gt;.*?data-src=&quot;(.*?)&quot;.*?name&quot;&gt;&lt;a.*?&gt;(.*?)&lt;/a&gt;.*?star&quot;&gt;(.*?)&lt;/p&gt;.*?releasetime&quot;&gt;(.*?)&lt;/p&gt;.*?integer&quot;&gt;(.*?)&lt;/i&gt;.*?fraction&quot;&gt;(.*?)&lt;/i&gt;.*?&lt;/dd&gt;&apos;,re.S) items = re.findall(pattern,html) print(&quot;当前页面有 &quot;+str(len(items))+&quot; 条数据\n&quot;) print(items) # for item in items: # yield &#123; # &apos;index&apos;: item[0], # &apos;image&apos;: item[1], # &apos;title&apos;: item[2] # &#125; # print(item) # return ;def main(): url = &quot;http://maoyan.com/board/4?&quot; html = get_one_page(url) parse_one_page(html)def printDate(): print(&quot;当前时间-&gt;&quot;) print(datetime.datetime.now())# define exceptiondef toException(): try: print(&quot;eeee&quot;) except RequestException: return Noneif __name__ == &apos;__main__&apos;: printDate() main()]]></content>
  </entry>
  <entry>
    <title><![CDATA[绝佳的hexo+github+theme+admin博客搭建流程]]></title>
    <url>%2F2018%2F07%2F18%2F%E7%BB%9D%E4%BD%B3%E7%9A%84hexo-github-theme-admin%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[安装Hexo $ npm install -g hexo-cli 新建个人Blog 123$ hexo init &lt;folder&gt; $ cd &lt;folder&gt; $ npm install 安装后台插件 1https://www.cnblogs.com/xingyunblog/p/8681205.html]]></content>
  </entry>
  <entry>
    <title><![CDATA[开发问题总结]]></title>
    <url>%2F2018%2F07%2F18%2Fssh%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[1，问题:ssh Permission denied (publickey) 解决方案：1https://www.cnblogs.com/896240130Master/p/8337809.html 2，问题 Appium Could not detect Mac OS X Version from sw_vers output: ‘10.12 ‘ 解决方案：1https://blog.csdn.net/achang21/article/details/6492263]]></content>
  </entry>
</search>
